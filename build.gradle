plugins {
    id 'java'
    id 'jacoco'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    mockitoAgent
}

configurations.configureEach {
    resolutionStrategy {
        // Force a safe version of commons-compress to avoid vulnerable versions
        force 'org.apache.commons:commons-compress:1.28.0'
    }
}

dependencies {
    // MongoDB Java Driver
    implementation(platform("org.mongodb:mongodb-driver-bom:5.5.1"))
    implementation 'org.mongodb:mongodb-driver-sync'

    // Log4J
    implementation platform('org.apache.logging.log4j:log4j-bom:2.24.1')
    implementation 'org.apache.logging.log4j:log4j-api'
    implementation 'org.apache.logging.log4j:log4j-core'

    // Jackson
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.0'
    // implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'

    // Lombok
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    // Mockito
    testImplementation 'org.mockito:mockito-junit-jupiter:5.14.0'
    // testImplementation 'org.mockito:mockito-core:5.14.0'

    // Testcontainers
    testImplementation 'org.testcontainers:mongodb:1.20.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.6'

    // AssertJ
    testImplementation 'org.assertj:assertj-core:3.27.3'

    // Lombok for tests
    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")

    // Mockito Agent
    mockitoAgent('org.mockito:mockito-core:5.14.0') {
        transitive = false
    }
}

tasks.test {
    useJUnitPlatform()
    jvmArgs += ['-Xshare:off', "-javaagent:${configurations.mockitoAgent.asPath}"]
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85 // 85% minimum coverage
            }
        }
    }

}